<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
    http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
            http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
            http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">

	<munit:config />
	<mock:config />

	<spring:beans>
		<spring:import resource="mongo-spy-example.xml" />
	</spring:beans>

	<munit:test name="afterFtpPollingSaveUser" description="Mongo must be called correctly">

		<mock:when messageProcessor="mongo:add-user" />

		<mock:spy messageProcessor="mongo:add-user">
			<mock:assertions-before-call>
				<munit:assert-not-null/>
			</mock:assertions-before-call>

			<mock:assertions-after-call>
				<munit:assert-not-null/>
			</mock:assertions-after-call>
		</mock:spy> 

		<munit:set payload-ref="#[getResource('users.xml').asStream()]" />


		<flow-ref name="mongo-storage" />

        <mock:verify-call messageProcessor="mongo:add-user" times="2"/>

	</munit:test>


</mule>