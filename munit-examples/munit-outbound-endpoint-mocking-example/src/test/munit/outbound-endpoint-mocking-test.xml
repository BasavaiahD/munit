<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
    http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
            http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
            http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">

	<munit:config />
	<mock:config />

	<spring:beans>
		<spring:import resource="outbound-endpoint-mocking-example.xml" />
	</spring:beans>

  <script:script name="mockTask" engine="groovy"><![CDATA[
            import org.mule.module.google.task.model.Task;
            
            Task task = new Task();
            task.setDeleted(true);
            task.setStatus("deleted");
            
			return task;
		]]>
    </script:script>
    
	<munit:test name="checkWePingTheService" description="The service must be called if the task is deleted">

		<mock:when messageProcessor="google-tasks:get-task-by-id"  >
		 <mock:then-return payload-ref="#[resultOfScript('mockTask')]"/>
		</mock:when>
		
		 <mock:outbound-endpoint address="http://localhost:8081/ping" returnPayload-ref="#[string:OK]">
            <mock:assertions>
                <munit:assert-true condition="#[payload.getStatus().equals('deleted')]"/>
            </mock:assertions>
        </mock:outbound-endpoint>

		<munit:set payload-ref="#[string:any]" />


		<flow-ref name="pingService" />

        <mock:verify-call messageProcessor="logger">
          <mock:attributes>
                <mock:attribute name="message" whereValue-ref="#[string:OK]"/>
            </mock:attributes>
        </mock:verify-call>

	</munit:test>


</mule>