<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:jdbc="http://www.mulesoft.org/schema/mule/ee/jdbc"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">


    <spring:bean id="jdbcDataSource"
                 class="org.enhydra.jdbc.standard.StandardDataSource" destroy-method="shutdown">
        <spring:property name="driverName" value="org.h2.Driver" />
        <spring:property name="url" value="jdbc:h2:mem:test" />
        <spring:property name="user" value="" />
        <spring:property name="password" value="" />

    </spring:bean>

    <jdbc:connector name="jdbcConnectorInbound"
                    dataSource-ref="jdbcDataSource">

        <jdbc:query key="lookupJob"
                    value="SELECT * FROM jobtitlelookup WHERE jobtitleid = #[variable:jobid]" />

    </jdbc:connector>

    <custom-transformer name="exceptionTransformer" class="org.mule.transformers.ExceptionTransformer"/>


    <flow name="echoFlow">
        <echo-component/>
    </flow>

    <sub-flow name="exceptionFlow">
        <transformer ref="exceptionTransformer"/>
    </sub-flow>

    <custom-transformer name="httpToMapTransformer" class="org.mule.transport.http.transformers.HttpRequestBodyToParamMap" />


    <sub-flow name="enrichMessageFlow">
        <enricher>
            <processor-chain>
                <jdbc:outbound-endpoint connector-ref="jdbcConnectorInbound"
                                        queryKey="lookupJob" exchange-pattern="request-response" />

                <choice>
                    <when evaluator="groovy" expression="return ((ArrayList)payload).size > 0">
                        <expression-transformer evaluator="groovy"
                                                expression="return payload[0].get('jobtitle')" />
                    </when>
                    <otherwise>
                        <expression-transformer evaluator="string"
                                                expression="HIR" />
                    </otherwise>
                </choice>
            </processor-chain>

            <enrich target="#[variable:job]" source="#[payload]" />
        </enricher>
    </sub-flow>


    <flow name="outboundEndPointFlow">
        <http:outbound-endpoint method="GET"
                                host="localhost" port="10443" path="test?json=AJSon"
                                exchange-pattern="request-response" />

    </flow>

</mule>