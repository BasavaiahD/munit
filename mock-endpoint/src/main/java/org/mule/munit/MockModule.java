/**
* Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
* The software in this package is published under the terms of the CPAL v1.0
* license, a copy of which has been included with this distribution in the
* LICENSE.txt file.
**/

/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.munit;

import org.mule.api.MuleContext;
import org.mule.api.NestedProcessor;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Module;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.param.Optional;
import org.mule.api.config.MuleProperties;
import org.mule.api.context.MuleContextAware;
import org.springframework.beans.BeansException;
import org.springframework.beans.MutablePropertyValues;
import org.springframework.beans.factory.config.BeanFactoryPostProcessor;
import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.beans.factory.support.AbstractBeanDefinition;
import org.springframework.beans.factory.support.GenericBeanDefinition;

import java.util.List;

/**
 * Generic module
 *
 * @author MuleSoft, Inc.
 */
@Module(name="mock", schemaVersion="1.0-SNAPSHOT")
public class MockModule  implements BeanFactoryPostProcessor, MuleContextAware
{
    private MuleContext muleContext;


    /**
     * Custom processor
     *
     * {@sample.xml ../../../doc/Mock-connector.xml.sample mock:my-processor}
     *
     * @param content Content to be processed
     * @param returnValue vale
     * @param assertions as
     */
    @Processor
    public void outboundEndpoint(String address, Object returnValue, @Optional List<NestedProcessor> assertions)
    {

        MockEndpointFactory factory = (MockEndpointFactory) muleContext.getRegistry().lookupObject(MuleProperties.OBJECT_MULE_ENDPOINT_FACTORY);

        factory.addExpect(address, new OutboundBehaviour(returnValue, assertions));
    }


    public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {
        GenericBeanDefinition endpointFactory = (GenericBeanDefinition) beanFactory.getBeanDefinition(MuleProperties.OBJECT_MULE_ENDPOINT_FACTORY);

        AbstractBeanDefinition abstractBeanDefinition = endpointFactory.cloneBeanDefinition();

        MutablePropertyValues propertyValues = new MutablePropertyValues();
        propertyValues.add("defaultFactory", abstractBeanDefinition);
        endpointFactory.setPropertyValues(propertyValues);
        endpointFactory.setBeanClassName(MockEndpointFactory.class.getCanonicalName());


    }

    @Override
    public void setMuleContext(MuleContext context) {
        this.muleContext = context;
    }
}
