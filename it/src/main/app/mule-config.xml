<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

      xmlns:http="http://www.mulesoft.org/schema/mule/http"

      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp"
      xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
      xmlns:jdbc="http://www.mulesoft.org/schema/mule/ee/jdbc"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:pm="http://www.mulesoft.org/schema/mule/peoplematter"

      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
        http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
        http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/peoplematter http://www.mulesoft.org/schema/mule/peoplematter/current/mule-peoplematter.xsd
        http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd">

    <!--xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"-->
    <!--http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/4.0/mule-sfdc.xsd-->

    <spring:bean id="jdbcDataSource"
                 class="org.enhydra.jdbc.standard.StandardDataSource" destroy-method="shutdown">
        <spring:property name="driverName" value="org.h2.Driver" />
        <spring:property name="url" value="jdbc:h2:mem:test" />
        <spring:property name="user" value="" />
        <spring:property name="password" value="" />

    </spring:bean>

    <jdbc:connector name="jdbcConnectorInbound"
                    dataSource-ref="jdbcDataSource">

        <jdbc:query key="lookupJob"
                    value="SELECT * FROM jobtitlelookup WHERE jobtitleid = #[variable:jobid]" />

    </jdbc:connector>

    <custom-transformer name="exceptionTransformer" class="org.mule.transformers.ExceptionTransformer"/>


    <script:transformer name="genderMappingTransformer">
        <script:script engine="groovy"><![CDATA[
			if (payload == "Male")
			{
				return "M";
			}
			else if (payload == "Female")
			{
				return "F";
			}
			else {
				return "0";
			}
         ]]></script:script>
    </script:transformer>


    <!-- Simples flow ever, echo the payload -->
    <flow name="echoFlow">
        <echo-component/>
    </flow>

    <!-- Our Subflow calls a transfomer that throws an exception -->
    <sub-flow name="exceptionFlow">
        <transformer ref="exceptionTransformer"/>
    </sub-flow>



    <!--<sfdc:config name="Salesforce" username="username"-->
                 <!--password="password" securityToken="token" />-->


    <custom-transformer name="httpToMapTransformer" class="org.mule.transport.http.transformers.HttpRequestBodyToParamMap" />


    <!--<flow name="campaignInfoFlow">-->
        <!--<composite-source>-->
            <!--<http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="10443" path="campaignInfo"/>-->
            <!--<http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="10443" path="otherInbound"/>-->

        <!--</composite-source>-->


        <!--<sfdc:query query="SELECT Name, CreatedDate, EndDate, phone__c, cc_template__c FROM Campaign WHERE IsActive=true"-->
                    <!--config-ref="Salesforce" />-->

        <!--<json:object-to-json-transformer />-->

        <!--<default-exception-strategy>-->
            <!--<logger message="Something failed"/>-->
        <!--</default-exception-strategy>-->
    <!--</flow>-->

    <!--<flow name="getUpdatedSalesforce">-->
        <!--<http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="10443" path="getUpdatedSalesforce">-->
            <!--<http:body-to-parameter-map-transformer/>-->
        <!--</http:inbound-endpoint>-->

        <!--<sfdc:get-updated-objects type="Campaign" initialTimeWindow="3" >-->
            <!--<sfdc:fields>-->
                <!--<sfdc:field>test</sfdc:field>-->
            <!--</sfdc:fields>-->
        <!--</sfdc:get-updated-objects>-->


        <!--<json:object-to-json-transformer />-->
    <!--</flow>-->


    <!--<flow name="updateSalesforceTemplate">-->
        <!--<http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="10443" path="updateSalesforceTemplate">-->
            <!--<http:body-to-parameter-map-transformer/>-->
        <!--</http:inbound-endpoint>-->

        <!--<sfdc:upsert type="Campaign" externalIdFieldName="Name">-->
            <!--<sfdc:objects>-->
                <!--<sfdc:object>-->
                    <!--<Name>#[map-payload:campaignName]</Name>-->
                    <!--<cc_template__c>#[map-payload:template]</cc_template__c>-->
                <!--</sfdc:object>-->
            <!--</sfdc:objects>-->
        <!--</sfdc:upsert>-->
    <!--</flow>-->

    <!--<flow name="sendToSFTP">-->

        <!--<sfdc:query query="SELECT Name, CreatedDate, EndDate, phone__c, cc_template__c FROM Campaign WHERE IsActive=true"-->
                    <!--config-ref="Salesforce" />-->

        <!--<json:object-to-json-transformer />-->

        <!--<sftp:outbound-endpoint host="localhost"-->
                                <!--port="3001" user="user" password="passwrd"-->
                                <!--outputPattern="sftp-jsonResult.txt" path="/tmp">-->
        <!--</sftp:outbound-endpoint>-->
    <!--</flow>-->

    <!--<flow name="sendToFTP">-->

        <!--<sfdc:query query="SELECT Name, CreatedDate, EndDate, phone__c, cc_template__c FROM Campaign WHERE IsActive=true"-->
                    <!--config-ref="Salesforce" />-->

        <!--<json:object-to-json-transformer />-->

        <!--<ftp:outbound-endpoint host="localhost"-->
                               <!--port="3002" user="mock2" password="mock"-->
                               <!--outputPattern="ftp-jsonResult.txt" path="/tmp">-->
        <!--</ftp:outbound-endpoint>-->
    <!--</flow>-->

    <!--<sub-flow name="enrichMessageFlow">-->
        <!--<enricher>-->
            <!--<processor-chain>-->
                <!--<jdbc:outbound-endpoint connector-ref="jdbcConnectorInbound"-->
                                        <!--queryKey="lookupJob" exchange-pattern="request-response" />-->

                <!--<choice>-->
                    <!--<when evaluator="groovy" expression="return ((ArrayList)payload).size > 0">-->
                        <!--<expression-transformer evaluator="groovy"-->
                                                <!--expression="return payload[0].get('jobtitle')" />-->
                    <!--</when>-->
                    <!--<otherwise>-->
                        <!--<expression-transformer evaluator="string"-->
                                                <!--expression="HIR" />-->
                    <!--</otherwise>-->
                <!--</choice>-->
            <!--</processor-chain>-->

            <!--<enrich target="#[variable:job]" source="#[payload]" />-->
        <!--</enricher>-->
    <!--</sub-flow>-->

    <flow name="peopleMatterInbound">

        <pm:secure-event-message-filter key="secure_key" />
        <pm:event-to-xml-transformer />


    </flow>


    <flow name="outboundEndPointFlow">

        <!-- Do some processing here -->

        <http:outbound-endpoint method="GET"
                                host="localhost" port="10443" path="test?json=AJSon"
                                exchange-pattern="request-response" />

        <!--<http:outbound-endpoint method="GET"-->
        <!--host="localhost" port="10443" path="test2?json=AnotherJSon"-->
        <!--exchange-pattern="request-response" />-->


    </flow>

</mule>